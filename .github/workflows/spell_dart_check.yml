name: Spell Check Pull Request

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  spell-check:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 20

    - name: Install cspell
      run: npm install -g cspell

    - name: Spell check
      run: cspell **/*.dart > cspell_report.txt
      continue-on-error: true
    
    - name: Read Comment Text from File
      id: vars
      run: |
        echo 'comment<<EOF' >> $GITHUB_OUTPUT
        cat cspell_report.txt >> $GITHUB_OUTPUT   
        echo 'EOF' >> $GITHUB_OUTPUT

    - name: Post Comment
      uses: actions/github-script@v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: `${{ steps.vars.outputs.comment }}`,
          });

    - name: Generate Review Comment
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Define your review comment message here
        COMMENT="This is an automated review comment."

        # Extract relevant information from the event payload
        PR_URL=$(jq -r .pull_request.url "$GITHUB_EVENT_PATH")

        # Create the review comment using the GitHub API
        curl -X POST \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          "$PR_URL/reviews" \
          -d "{\"body\": \"$COMMENT\"}"

    # - name: report cspell
    #   uses: dorny/test-reporter@v1
    #   with:
    #     name: 'flutter cspell'
    #     path: 'test_report.log'
    #     reporter: 'flutter-json'
    #     fail-on-error: 'false'
